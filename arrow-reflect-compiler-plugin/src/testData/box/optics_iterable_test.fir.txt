FILE: optics_iterable_test.kt
    package foo.bar

    public final data class Street : R|kotlin/Any| {
        public constructor(number: R|kotlin/Int|, name: R|kotlin/String|): R|foo/bar/Street| {
            super<R|kotlin/Any|>()
        }

        public final val number: R|kotlin/Int| = R|<local>/number|
            public get(): R|kotlin/Int|

        public final val name: R|kotlin/String| = R|<local>/name|
            public get(): R|kotlin/String|

        public final operator fun component1(): R|kotlin/Int|

        public final operator fun component2(): R|kotlin/String|

        public final fun copy(number: R|kotlin/Int| = this@R|foo/bar/Street|.R|foo/bar/Street.number|, name: R|kotlin/String| = this@R|foo/bar/Street|.R|foo/bar/Street.name|): R|foo/bar/Street|

    }
    public final data class Address : R|kotlin/Any| {
        public constructor(city: R|kotlin/String|, street: R|foo/bar/Street|): R|foo/bar/Address| {
            super<R|kotlin/Any|>()
        }

        public final val city: R|kotlin/String| = R|<local>/city|
            public get(): R|kotlin/String|

        public final val street: R|foo/bar/Street| = R|<local>/street|
            public get(): R|foo/bar/Street|

        public final operator fun component1(): R|kotlin/String|

        public final operator fun component2(): R|foo/bar/Street|

        public final fun copy(city: R|kotlin/String| = this@R|foo/bar/Address|.R|foo/bar/Address.city|, street: R|foo/bar/Street| = this@R|foo/bar/Address|.R|foo/bar/Address.street|): R|foo/bar/Address|

    }
    public final data class Company : R|kotlin/Any| {
        public constructor(name: R|kotlin/String|, address: R|foo/bar/Address|, employees: R|kotlin/collections/List<foo/bar/Employee>|): R|foo/bar/Company| {
            super<R|kotlin/Any|>()
        }

        public final val name: R|kotlin/String| = R|<local>/name|
            public get(): R|kotlin/String|

        public final val address: R|foo/bar/Address| = R|<local>/address|
            public get(): R|foo/bar/Address|

        public final val employees: R|kotlin/collections/List<foo/bar/Employee>| = R|<local>/employees|
            public get(): R|kotlin/collections/List<foo/bar/Employee>|

        public final operator fun component1(): R|kotlin/String|

        public final operator fun component2(): R|foo/bar/Address|

        public final operator fun component3(): R|kotlin/collections/List<foo/bar/Employee>|

        public final fun copy(name: R|kotlin/String| = this@R|foo/bar/Company|.R|foo/bar/Company.name|, address: R|foo/bar/Address| = this@R|foo/bar/Company|.R|foo/bar/Company.address|, employees: R|kotlin/collections/List<foo/bar/Employee>| = this@R|foo/bar/Company|.R|foo/bar/Company.employees|): R|foo/bar/Company|

    }
    public final data class Employee : R|kotlin/Any| {
        public constructor(name: R|kotlin/String|, company: R|foo/bar/Company?|): R|foo/bar/Employee| {
            super<R|kotlin/Any|>()
        }

        public final val name: R|kotlin/String| = R|<local>/name|
            public get(): R|kotlin/String|

        public final val company: R|foo/bar/Company?| = R|<local>/company|
            public get(): R|foo/bar/Company?|

        public final operator fun component1(): R|kotlin/String|

        public final operator fun component2(): R|foo/bar/Company?|

        public final fun copy(name: R|kotlin/String| = this@R|foo/bar/Employee|.R|foo/bar/Employee.name|, company: R|foo/bar/Company?| = this@R|foo/bar/Employee|.R|foo/bar/Employee.company|): R|foo/bar/Employee|

    }
    public final fun main(): R|kotlin/Unit| {
        lval path: R|arrow/meta/samples/Path<foo/bar/Employee, kotlin/collections/List<kotlin/Int>?>| = @R|arrow/meta/samples/Optics|() <getClass>(Q|foo/bar/Employee|).R|arrow/meta/samples/invoke|<R|foo/bar/Employee|, R|kotlin/collections/List<kotlin/Int>?|>(<L> = invoke@fun R|foo/bar/Employee|.<anonymous>(): R|kotlin/collections/List<kotlin/Int>?| <inline=NoInline>  {
            ^ this@R|special/anonymous|.R|foo/bar/Employee.company|?.{ $subj$.R|foo/bar/Company.employees| }?.{ $subj$.R|kotlin/collections/mapNotNull|<R|foo/bar/Employee|, R|kotlin/Int|>(<L> = mapNotNull@fun <anonymous>(it: R|foo/bar/Employee|): R|kotlin/Int?| <inline=Inline, kind=UNKNOWN>  {
                ^ R|<local>/it|.R|foo/bar/Employee.company|?.{ $subj$.R|foo/bar/Company.address| }?.{ $subj$.R|foo/bar/Address.street| }?.{ $subj$.R|foo/bar/Street.number| }
            }
            ) }
        }
        )
    }
